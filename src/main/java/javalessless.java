// Generated from /home/shi/Documents/compiladores/trabalho_pratico/1-tp/src/main/java/javalessless.g4 by ANTLR 4.7.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class javalessless extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Error1=1, Error2=2, Error3=3, Error4=4, Error5=5, Error6=6, Error7=7, 
		Error8=8, Error9=9, Error10=10, Error11=11, ABS=12, EXT=13, PRI=14, PRO=15, 
		PUB=16, CLA=17, THIS=18, NEW=19, NUL=20, IMP=21, PAC=22, RET=23, SUP=24, 
		IF=25, WHI=26, ELS=27, INS=28, INT=29, CHA=30, VOI=31, BOO=32, STA=33, 
		FAL=34, TRU=35, Var=36, NumR=37, Atrib=38, AtrArit=39, OpBool=40, OpUni=41, 
		OpArit=42, VOP=43, VCL=44, KOP=45, KCL=46, AP=47, FP=48, Str=49, EndL=50, 
		PTR=51, COMA=52, NEWLINE=53, WS=54, Comment=55, LOWW=56, UPPW=57, Numl=58, 
		NNuml=59, WORD=60, MODV=61;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"Error1", "Error2", "Error3", "Error4", "Error5", "Error6", "Error7", 
			"Error8", "Error9", "Error10", "Error11", "ABS", "EXT", "PRI", "PRO", 
			"PUB", "CLA", "THIS", "NEW", "NUL", "IMP", "PAC", "RET", "SUP", "IF", 
			"WHI", "ELS", "INS", "INT", "CHA", "VOI", "BOO", "STA", "FAL", "TRU", 
			"Var", "NumR", "Atrib", "AtrArit", "OpBool", "OpUni", "OpArit", "VOP", 
			"VCL", "KOP", "KCL", "AP", "FP", "Str", "EndL", "PTR", "COMA", "NEWLINE", 
			"WS", "Comment", "LOWW", "UPPW", "Numl", "NNuml", "WORD", "MODV"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'abtract'", null, "'privte'", "'cass'", null, null, null, 
			"'instancof'", "'bool'", null, "'abstract'", "'extends'", "'private'", 
			"'protected'", "'public'", "'class'", "'this'", "'new'", "'null'", "'import'", 
			"'package'", "'return'", "'super'", "'if'", "'while'", "'else'", "'instanceof'", 
			"'int'", "'char'", "'void'", "'boolean'", "'static'", "'false'", "'true'", 
			null, null, "'='", "'+='", null, null, null, "'['", "']'", "'{'", "'}'", 
			"'('", "')'", null, "';'", "'.'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Error1", "Error2", "Error3", "Error4", "Error5", "Error6", "Error7", 
			"Error8", "Error9", "Error10", "Error11", "ABS", "EXT", "PRI", "PRO", 
			"PUB", "CLA", "THIS", "NEW", "NUL", "IMP", "PAC", "RET", "SUP", "IF", 
			"WHI", "ELS", "INS", "INT", "CHA", "VOI", "BOO", "STA", "FAL", "TRU", 
			"Var", "NumR", "Atrib", "AtrArit", "OpBool", "OpUni", "OpArit", "VOP", 
			"VCL", "KOP", "KCL", "AP", "FP", "Str", "EndL", "PTR", "COMA", "NEWLINE", 
			"WS", "Comment", "LOWW", "UPPW", "Numl", "NNuml", "WORD", "MODV"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public javalessless(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "javalessless.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2?\u020e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0096\n\4\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\7\3\7\5\7\u00b1\n\7\3\b\3\b\3\b\3\b\3\b\3\b\5\b\u00b9\n\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\3\t\5\t\u00c5\n\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\7\f\u00d8\n\f\f\f\16\f\u00db"+
		"\13\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\5\f\u00f3\n\f\3\f\6\f\u00f6\n\f\r\f\16\f\u00f7"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3"+
		"!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3"+
		"$\3$\3$\3$\3%\3%\5%\u0197\n%\3%\3%\3%\7%\u019c\n%\f%\16%\u019f\13%\3&"+
		"\3&\3&\3&\3&\3&\3&\3&\5&\u01a9\n&\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3)\3)\3"+
		")\5)\u01b7\n)\3*\3*\3*\3*\3*\5*\u01be\n*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3"+
		"/\3\60\3\60\3\61\3\61\3\62\3\62\7\62\u01d0\n\62\f\62\16\62\u01d3\13\62"+
		"\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\5\66\u01de\n\66\3\66\3\66"+
		"\6\66\u01e2\n\66\r\66\16\66\u01e3\3\67\6\67\u01e7\n\67\r\67\16\67\u01e8"+
		"\3\67\3\67\38\38\38\38\78\u01f1\n8\f8\168\u01f4\138\38\38\39\39\3:\3:"+
		"\3;\6;\u01fd\n;\r;\16;\u01fe\3<\3<\3<\3=\3=\6=\u0206\n=\r=\16=\u0207\3"+
		">\3>\3>\5>\u020d\n>\2\2?\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?\3\2\7\4\2&&aa\4\2,-//\4\2$$^^\5\2"+
		"\13\f\16\17\"\"\4\2\f\f\17\17\2\u023e\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2"+
		"\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2"+
		"\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3"+
		"\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3"+
		"\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65"+
		"\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\u0080\3\2"+
		"\2\2\7\u0095\3\2\2\2\t\u0097\3\2\2\2\13\u009e\3\2\2\2\r\u00b0\3\2\2\2"+
		"\17\u00b8\3\2\2\2\21\u00c4\3\2\2\2\23\u00c6\3\2\2\2\25\u00d0\3\2\2\2\27"+
		"\u00d9\3\2\2\2\31\u00f9\3\2\2\2\33\u0102\3\2\2\2\35\u010a\3\2\2\2\37\u0112"+
		"\3\2\2\2!\u011c\3\2\2\2#\u0123\3\2\2\2%\u0129\3\2\2\2\'\u012e\3\2\2\2"+
		")\u0132\3\2\2\2+\u0137\3\2\2\2-\u013e\3\2\2\2/\u0146\3\2\2\2\61\u014d"+
		"\3\2\2\2\63\u0153\3\2\2\2\65\u0156\3\2\2\2\67\u015c\3\2\2\29\u0161\3\2"+
		"\2\2;\u016c\3\2\2\2=\u0170\3\2\2\2?\u0175\3\2\2\2A\u017a\3\2\2\2C\u0182"+
		"\3\2\2\2E\u0189\3\2\2\2G\u018f\3\2\2\2I\u0196\3\2\2\2K\u01a8\3\2\2\2M"+
		"\u01aa\3\2\2\2O\u01ac\3\2\2\2Q\u01b6\3\2\2\2S\u01bd\3\2\2\2U\u01bf\3\2"+
		"\2\2W\u01c1\3\2\2\2Y\u01c3\3\2\2\2[\u01c5\3\2\2\2]\u01c7\3\2\2\2_\u01c9"+
		"\3\2\2\2a\u01cb\3\2\2\2c\u01cd\3\2\2\2e\u01d6\3\2\2\2g\u01d8\3\2\2\2i"+
		"\u01da\3\2\2\2k\u01e1\3\2\2\2m\u01e6\3\2\2\2o\u01ec\3\2\2\2q\u01f7\3\2"+
		"\2\2s\u01f9\3\2\2\2u\u01fc\3\2\2\2w\u0200\3\2\2\2y\u0205\3\2\2\2{\u020c"+
		"\3\2\2\2}~\5u;\2~\177\5I%\2\177\4\3\2\2\2\u0080\u0081\7c\2\2\u0081\u0082"+
		"\7d\2\2\u0082\u0083\7v\2\2\u0083\u0084\7t\2\2\u0084\u0085\7c\2\2\u0085"+
		"\u0086\7e\2\2\u0086\u0087\7v\2\2\u0087\6\3\2\2\2\u0088\u0089\7g\2\2\u0089"+
		"\u008a\7v\2\2\u008a\u008b\7g\2\2\u008b\u008c\7p\2\2\u008c\u008d\7f\2\2"+
		"\u008d\u0096\7u\2\2\u008e\u008f\7g\2\2\u008f\u0090\7u\2\2\u0090\u0091"+
		"\7v\2\2\u0091\u0092\7g\2\2\u0092\u0093\7p\2\2\u0093\u0094\7f\2\2\u0094"+
		"\u0096\7u\2\2\u0095\u0088\3\2\2\2\u0095\u008e\3\2\2\2\u0096\b\3\2\2\2"+
		"\u0097\u0098\7r\2\2\u0098\u0099\7t\2\2\u0099\u009a\7k\2\2\u009a\u009b"+
		"\7x\2\2\u009b\u009c\7v\2\2\u009c\u009d\7g\2\2\u009d\n\3\2\2\2\u009e\u009f"+
		"\7e\2\2\u009f\u00a0\7c\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7u\2\2\u00a2"+
		"\f\3\2\2\2\u00a3\u00a4\7r\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7q\2\2\u00a6"+
		"\u00a7\7v\2\2\u00a7\u00a8\7g\2\2\u00a8\u00b1\7f\2\2\u00a9\u00aa\7r\2\2"+
		"\u00aa\u00ab\7t\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7e\2\2\u00ad\u00ae"+
		"\7v\2\2\u00ae\u00af\7g\2\2\u00af\u00b1\7f\2\2\u00b0\u00a3\3\2\2\2\u00b0"+
		"\u00a9\3\2\2\2\u00b1\16\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7h\2\2"+
		"\u00b4\u00b9\7h\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7k\2\2\u00b7\u00b9"+
		"\7h\2\2\u00b8\u00b2\3\2\2\2\u00b8\u00b5\3\2\2\2\u00b9\20\3\2\2\2\u00ba"+
		"\u00bb\7y\2\2\u00bb\u00bc\7k\2\2\u00bc\u00bd\7n\2\2\u00bd\u00c5\7g\2\2"+
		"\u00be\u00bf\7y\2\2\u00bf\u00c0\7j\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2"+
		"\7n\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c5\7g\2\2\u00c4\u00ba\3\2\2\2\u00c4"+
		"\u00be\3\2\2\2\u00c5\22\3\2\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2"+
		"\u00c8\u00c9\7u\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7c\2\2\u00cb\u00cc"+
		"\7p\2\2\u00cc\u00cd\7e\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7h\2\2\u00cf"+
		"\24\3\2\2\2\u00d0\u00d1\7d\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7q\2\2\u00d3"+
		"\u00d4\7n\2\2\u00d4\26\3\2\2\2\u00d5\u00d8\5y=\2\u00d6\u00d8\5u;\2\u00d7"+
		"\u00d5\3\2\2\2\u00d7\u00d6\3\2\2\2\u00d8\u00db\3\2\2\2\u00d9\u00d7\3\2"+
		"\2\2\u00d9\u00da\3\2\2\2\u00da\u00f2\3\2\2\2\u00db\u00d9\3\2\2\2\u00dc"+
		"\u00f3\5\31\r\2\u00dd\u00f3\5\33\16\2\u00de\u00f3\5\35\17\2\u00df\u00f3"+
		"\5\37\20\2\u00e0\u00f3\5!\21\2\u00e1\u00f3\5#\22\2\u00e2\u00f3\5%\23\2"+
		"\u00e3\u00f3\5\'\24\2\u00e4\u00f3\5)\25\2\u00e5\u00f3\5+\26\2\u00e6\u00f3"+
		"\5-\27\2\u00e7\u00f3\5/\30\2\u00e8\u00f3\5\61\31\2\u00e9\u00f3\5\65\33"+
		"\2\u00ea\u00f3\5\67\34\2\u00eb\u00f3\59\35\2\u00ec\u00f3\5=\37\2\u00ed"+
		"\u00f3\5? \2\u00ee\u00f3\5A!\2\u00ef\u00f3\5C\"\2\u00f0\u00f3\5E#\2\u00f1"+
		"\u00f3\5G$\2\u00f2\u00dc\3\2\2\2\u00f2\u00dd\3\2\2\2\u00f2\u00de\3\2\2"+
		"\2\u00f2\u00df\3\2\2\2\u00f2\u00e0\3\2\2\2\u00f2\u00e1\3\2\2\2\u00f2\u00e2"+
		"\3\2\2\2\u00f2\u00e3\3\2\2\2\u00f2\u00e4\3\2\2\2\u00f2\u00e5\3\2\2\2\u00f2"+
		"\u00e6\3\2\2\2\u00f2\u00e7\3\2\2\2\u00f2\u00e8\3\2\2\2\u00f2\u00e9\3\2"+
		"\2\2\u00f2\u00ea\3\2\2\2\u00f2\u00eb\3\2\2\2\u00f2\u00ec\3\2\2\2\u00f2"+
		"\u00ed\3\2\2\2\u00f2\u00ee\3\2\2\2\u00f2\u00ef\3\2\2\2\u00f2\u00f0\3\2"+
		"\2\2\u00f2\u00f1\3\2\2\2\u00f3\u00f5\3\2\2\2\u00f4\u00f6\5I%\2\u00f5\u00f4"+
		"\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8"+
		"\30\3\2\2\2\u00f9\u00fa\7c\2\2\u00fa\u00fb\7d\2\2\u00fb\u00fc\7u\2\2\u00fc"+
		"\u00fd\7v\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7e\2\2"+
		"\u0100\u0101\7v\2\2\u0101\32\3\2\2\2\u0102\u0103\7g\2\2\u0103\u0104\7"+
		"z\2\2\u0104\u0105\7v\2\2\u0105\u0106\7g\2\2\u0106\u0107\7p\2\2\u0107\u0108"+
		"\7f\2\2\u0108\u0109\7u\2\2\u0109\34\3\2\2\2\u010a\u010b\7r\2\2\u010b\u010c"+
		"\7t\2\2\u010c\u010d\7k\2\2\u010d\u010e\7x\2\2\u010e\u010f\7c\2\2\u010f"+
		"\u0110\7v\2\2\u0110\u0111\7g\2\2\u0111\36\3\2\2\2\u0112\u0113\7r\2\2\u0113"+
		"\u0114\7t\2\2\u0114\u0115\7q\2\2\u0115\u0116\7v\2\2\u0116\u0117\7g\2\2"+
		"\u0117\u0118\7e\2\2\u0118\u0119\7v\2\2\u0119\u011a\7g\2\2\u011a\u011b"+
		"\7f\2\2\u011b \3\2\2\2\u011c\u011d\7r\2\2\u011d\u011e\7w\2\2\u011e\u011f"+
		"\7d\2\2\u011f\u0120\7n\2\2\u0120\u0121\7k\2\2\u0121\u0122\7e\2\2\u0122"+
		"\"\3\2\2\2\u0123\u0124\7e\2\2\u0124\u0125\7n\2\2\u0125\u0126\7c\2\2\u0126"+
		"\u0127\7u\2\2\u0127\u0128\7u\2\2\u0128$\3\2\2\2\u0129\u012a\7v\2\2\u012a"+
		"\u012b\7j\2\2\u012b\u012c\7k\2\2\u012c\u012d\7u\2\2\u012d&\3\2\2\2\u012e"+
		"\u012f\7p\2\2\u012f\u0130\7g\2\2\u0130\u0131\7y\2\2\u0131(\3\2\2\2\u0132"+
		"\u0133\7p\2\2\u0133\u0134\7w\2\2\u0134\u0135\7n\2\2\u0135\u0136\7n\2\2"+
		"\u0136*\3\2\2\2\u0137\u0138\7k\2\2\u0138\u0139\7o\2\2\u0139\u013a\7r\2"+
		"\2\u013a\u013b\7q\2\2\u013b\u013c\7t\2\2\u013c\u013d\7v\2\2\u013d,\3\2"+
		"\2\2\u013e\u013f\7r\2\2\u013f\u0140\7c\2\2\u0140\u0141\7e\2\2\u0141\u0142"+
		"\7m\2\2\u0142\u0143\7c\2\2\u0143\u0144\7i\2\2\u0144\u0145\7g\2\2\u0145"+
		".\3\2\2\2\u0146\u0147\7t\2\2\u0147\u0148\7g\2\2\u0148\u0149\7v\2\2\u0149"+
		"\u014a\7w\2\2\u014a\u014b\7t\2\2\u014b\u014c\7p\2\2\u014c\60\3\2\2\2\u014d"+
		"\u014e\7u\2\2\u014e\u014f\7w\2\2\u014f\u0150\7r\2\2\u0150\u0151\7g\2\2"+
		"\u0151\u0152\7t\2\2\u0152\62\3\2\2\2\u0153\u0154\7k\2\2\u0154\u0155\7"+
		"h\2\2\u0155\64\3\2\2\2\u0156\u0157\7y\2\2\u0157\u0158\7j\2\2\u0158\u0159"+
		"\7k\2\2\u0159\u015a\7n\2\2\u015a\u015b\7g\2\2\u015b\66\3\2\2\2\u015c\u015d"+
		"\7g\2\2\u015d\u015e\7n\2\2\u015e\u015f\7u\2\2\u015f\u0160\7g\2\2\u0160"+
		"8\3\2\2\2\u0161\u0162\7k\2\2\u0162\u0163\7p\2\2\u0163\u0164\7u\2\2\u0164"+
		"\u0165\7v\2\2\u0165\u0166\7c\2\2\u0166\u0167\7p\2\2\u0167\u0168\7e\2\2"+
		"\u0168\u0169\7g\2\2\u0169\u016a\7q\2\2\u016a\u016b\7h\2\2\u016b:\3\2\2"+
		"\2\u016c\u016d\7k\2\2\u016d\u016e\7p\2\2\u016e\u016f\7v\2\2\u016f<\3\2"+
		"\2\2\u0170\u0171\7e\2\2\u0171\u0172\7j\2\2\u0172\u0173\7c\2\2\u0173\u0174"+
		"\7t\2\2\u0174>\3\2\2\2\u0175\u0176\7x\2\2\u0176\u0177\7q\2\2\u0177\u0178"+
		"\7k\2\2\u0178\u0179\7f\2\2\u0179@\3\2\2\2\u017a\u017b\7d\2\2\u017b\u017c"+
		"\7q\2\2\u017c\u017d\7q\2\2\u017d\u017e\7n\2\2\u017e\u017f\7g\2\2\u017f"+
		"\u0180\7c\2\2\u0180\u0181\7p\2\2\u0181B\3\2\2\2\u0182\u0183\7u\2\2\u0183"+
		"\u0184\7v\2\2\u0184\u0185\7c\2\2\u0185\u0186\7v\2\2\u0186\u0187\7k\2\2"+
		"\u0187\u0188\7e\2\2\u0188D\3\2\2\2\u0189\u018a\7h\2\2\u018a\u018b\7c\2"+
		"\2\u018b\u018c\7n\2\2\u018c\u018d\7u\2\2\u018d\u018e\7g\2\2\u018eF\3\2"+
		"\2\2\u018f\u0190\7v\2\2\u0190\u0191\7t\2\2\u0191\u0192\7w\2\2\u0192\u0193"+
		"\7g\2\2\u0193H\3\2\2\2\u0194\u0197\5y=\2\u0195\u0197\t\2\2\2\u0196\u0194"+
		"\3\2\2\2\u0196\u0195\3\2\2\2\u0197\u019d\3\2\2\2\u0198\u019c\5u;\2\u0199"+
		"\u019c\7a\2\2\u019a\u019c\5y=\2\u019b\u0198\3\2\2\2\u019b\u0199\3\2\2"+
		"\2\u019b\u019a\3\2\2\2\u019c\u019f\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e"+
		"\3\2\2\2\u019eJ\3\2\2\2\u019f\u019d\3\2\2\2\u01a0\u01a1\5u;\2\u01a1\u01a2"+
		"\7\60\2\2\u01a2\u01a3\5u;\2\u01a3\u01a9\3\2\2\2\u01a4\u01a5\5w<\2\u01a5"+
		"\u01a6\7\60\2\2\u01a6\u01a7\5u;\2\u01a7\u01a9\3\2\2\2\u01a8\u01a0\3\2"+
		"\2\2\u01a8\u01a4\3\2\2\2\u01a9L\3\2\2\2\u01aa\u01ab\7?\2\2\u01abN\3\2"+
		"\2\2\u01ac\u01ad\7-\2\2\u01ad\u01ae\7?\2\2\u01aeP\3\2\2\2\u01af\u01b0"+
		"\7?\2\2\u01b0\u01b7\7?\2\2\u01b1\u01b7\7@\2\2\u01b2\u01b3\7(\2\2\u01b3"+
		"\u01b7\7(\2\2\u01b4\u01b5\7>\2\2\u01b5\u01b7\7?\2\2\u01b6\u01af\3\2\2"+
		"\2\u01b6\u01b1\3\2\2\2\u01b6\u01b2\3\2\2\2\u01b6\u01b4\3\2\2\2\u01b7R"+
		"\3\2\2\2\u01b8\u01be\7#\2\2\u01b9\u01ba\7-\2\2\u01ba\u01be\7-\2\2\u01bb"+
		"\u01bc\7/\2\2\u01bc\u01be\7/\2\2\u01bd\u01b8\3\2\2\2\u01bd\u01b9\3\2\2"+
		"\2\u01bd\u01bb\3\2\2\2\u01beT\3\2\2\2\u01bf\u01c0\t\3\2\2\u01c0V\3\2\2"+
		"\2\u01c1\u01c2\7]\2\2\u01c2X\3\2\2\2\u01c3\u01c4\7_\2\2\u01c4Z\3\2\2\2"+
		"\u01c5\u01c6\7}\2\2\u01c6\\\3\2\2\2\u01c7\u01c8\7\177\2\2\u01c8^\3\2\2"+
		"\2\u01c9\u01ca\7*\2\2\u01ca`\3\2\2\2\u01cb\u01cc\7+\2\2\u01ccb\3\2\2\2"+
		"\u01cd\u01d1\7$\2\2\u01ce\u01d0\n\4\2\2\u01cf\u01ce\3\2\2\2\u01d0\u01d3"+
		"\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2\u01d4\3\2\2\2\u01d3"+
		"\u01d1\3\2\2\2\u01d4\u01d5\7$\2\2\u01d5d\3\2\2\2\u01d6\u01d7\7=\2\2\u01d7"+
		"f\3\2\2\2\u01d8\u01d9\7\60\2\2\u01d9h\3\2\2\2\u01da\u01db\7.\2\2\u01db"+
		"j\3\2\2\2\u01dc\u01de\7\17\2\2\u01dd\u01dc\3\2\2\2\u01dd\u01de\3\2\2\2"+
		"\u01de\u01df\3\2\2\2\u01df\u01e2\7\f\2\2\u01e0\u01e2\7\17\2\2\u01e1\u01dd"+
		"\3\2\2\2\u01e1\u01e0\3\2\2\2\u01e2\u01e3\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e3"+
		"\u01e4\3\2\2\2\u01e4l\3\2\2\2\u01e5\u01e7\t\5\2\2\u01e6\u01e5\3\2\2\2"+
		"\u01e7\u01e8\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e8\u01e9\3\2\2\2\u01e9\u01ea"+
		"\3\2\2\2\u01ea\u01eb\b\67\2\2\u01ebn\3\2\2\2\u01ec\u01ed\7\61\2\2\u01ed"+
		"\u01ee\7\61\2\2\u01ee\u01f2\3\2\2\2\u01ef\u01f1\n\6\2\2\u01f0\u01ef\3"+
		"\2\2\2\u01f1\u01f4\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f2\u01f3\3\2\2\2\u01f3"+
		"\u01f5\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f5\u01f6\b8\2\2\u01f6p\3\2\2\2\u01f7"+
		"\u01f8\4c|\2\u01f8r\3\2\2\2\u01f9\u01fa\4C\\\2\u01fat\3\2\2\2\u01fb\u01fd"+
		"\4\62;\2\u01fc\u01fb\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe\u01fc\3\2\2\2\u01fe"+
		"\u01ff\3\2\2\2\u01ffv\3\2\2\2\u0200\u0201\7/\2\2\u0201\u0202\5u;\2\u0202"+
		"x\3\2\2\2\u0203\u0206\5q9\2\u0204\u0206\5s:\2\u0205\u0203\3\2\2\2\u0205"+
		"\u0204\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u0205\3\2\2\2\u0207\u0208\3\2"+
		"\2\2\u0208z\3\2\2\2\u0209\u020d\5\35\17\2\u020a\u020d\5!\21\2\u020b\u020d"+
		"\5\37\20\2\u020c\u0209\3\2\2\2\u020c\u020a\3\2\2\2\u020c\u020b\3\2\2\2"+
		"\u020d|\3\2\2\2\33\2\u0095\u00b0\u00b8\u00c4\u00d7\u00d9\u00f2\u00f7\u0196"+
		"\u019b\u019d\u01a8\u01b6\u01bd\u01d1\u01dd\u01e1\u01e3\u01e8\u01f2\u01fe"+
		"\u0205\u0207\u020c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}